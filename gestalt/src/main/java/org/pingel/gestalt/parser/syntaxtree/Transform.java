//
// Generated by JTB 1.2.2
//

package org.pingel.gestalt.parser.syntaxtree;

/**
 * Grammar production:
 * f0 -> "transform"
 * f1 -> Identifier()
 * f2 -> Identifier()
 * f3 -> Identifier()
 * f4 -> "{"
 * f5 -> ( Substitution() )*
 * f6 -> "}"
 * f7 -> ( "$" Identifier() )?
 */
public class Transform implements Node {
   public NodeToken f0;
   public Identifier f1;
   public Identifier f2;
   public Identifier f3;
   public NodeToken f4;
   public NodeListOptional f5;
   public NodeToken f6;
   public NodeOptional f7;

   public Transform(NodeToken n0, Identifier n1, Identifier n2, Identifier n3, NodeToken n4, NodeListOptional n5, NodeToken n6, NodeOptional n7) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
      f6 = n6;
      f7 = n7;
   }

   public Transform(Identifier n0, Identifier n1, Identifier n2, NodeListOptional n3, NodeOptional n4) {
      f0 = new NodeToken("transform");
      f1 = n0;
      f2 = n1;
      f3 = n2;
      f4 = new NodeToken("{");
      f5 = n3;
      f6 = new NodeToken("}");
      f7 = n4;
   }

   public void accept(org.pingel.gestalt.parser.visitor.Visitor v) {
      v.visit(this);
   }
   public Object accept(org.pingel.gestalt.parser.visitor.ObjectVisitor v, Object argu) {
      return v.visit(this,argu);
   }
}

