
object LinearRegressionDemo {

  println("Linear Regression Demo")               //> Linear Regression Demo

  import collection._
  import axle.ml.LinearRegression._
  import axle.visualize._
  import axle.visualize.Plottable._

  case class RealtyListing(size: Double, bedrooms: Int, floors: Int, age: Int, price: Double)

  val data = Vector(
    RealtyListing(2104, 5, 1, 45, 460.0),
    RealtyListing(1416, 3, 2, 40, 232.0),
    RealtyListing(1534, 3, 2, 30, 315.0),
    RealtyListing(852, 2, 1, 36, 178.0))          //> data  : scala.collection.immutable.Vector[LinearRegressionDemo.RealtyListing
                                                  //| ] = Vector(RealtyListing(2104.0,5,1,45,460.0), RealtyListing(1416.0,3,2,40,2
                                                  //| 32.0), RealtyListing(1534.0,3,2,30,315.0), RealtyListing(852.0,2,1,36,178.0)
                                                  //| )

  val estimator = regression(
    data,
    numFeatures = 4,
    featureExtractor = (rl: RealtyListing) => (rl.size :: rl.bedrooms.toDouble :: rl.floors.toDouble :: rl.age.toDouble :: Nil),
    objectiveExtractor = (rl: RealtyListing) => rl.price,
    0.1, // Î±
    iterations = 100)                             //> estimator  : axle.ml.LinearRegression.LinearEstimator[LinearRegressionDemo.R
                                                  //| ealtyListing] = LinearEstimator(<function1>,axle.ml.FeatureNormalizer$Linear
                                                  //| FeatureNormalizer@9c0ec97,-0.114170
                                                  //| 0.412575
                                                  //| 0.516931
                                                  //| 0.047989
                                                  //| 0.150321,axle.ml.FeatureNormalizer$LinearFeatureNormalizer@68da4b71,List(2.5
                                                  //| 128090091314887, 1.9940009164767303, 1.58191872192217, 1.2545993429121414, 0
                                                  //| .9945998668072344, 0.7880672508058177, 0.623999488249853, 0.493658835327345,
                                                  //|  0.39010580239065656, 0.30782905514262204, 0.24245148633625785, 0.1904967812
                                                  //| 2062969, 0.14920402642498015, 0.11638047439014737, 0.09028461049827027, 0.06
                                                  //| 953328625861772, 0.05302796548021301, 0.03989614976064845, 0.029444859215203
                                                  //| 71, 0.021123687341158864, 0.01449545955216976, 0.009212930461954393, 0.00500
                                                  //| 0277075209034, 0.0016384008348354767, -0.0010467453790410433, -0.00319342786
                                                  //| 6263157, -0.004911494776430103, -0.006288223507025643, -0.007392964688493677
                                                  //| , -0.00828083043083155, -0.008995623532046786, -0.009572163865680796, -0.010
                                                  //| 038136013356486, -0.010415556674154173, -0.010721940103692033, -0.0109712237
                                                  //| 30491628, -0.011174503306569508, -0.011340616791014412, -0.01147660809779816
                                                  //| 1, -0.011588095431943217, -0.011679563849700224, -0.011754597637187596, -0.0
                                                  //| 11816064892466137, -0.011866264147088038, -0.011907040838828195, -0.01193987
                                                  //| 9839598752, -0.011965978965730442, -0.011986307383761954, -0.012001652019544
                                                  //| 996, -0.012012654438877293, -0.012019840159920397, -0.012023641954244806, -0
                                                  //| .012024418372954836, -0.012022468479897571, -0.0120180435718764, -0.01201135
                                                  //| 650530015, -0.012002589121233993, -0.011991898159591386, -0.0119794199728080
                                                  //| 75, -0.011965274285490591, -0.011949567195819386, -0.011932393574215536, -0.
                                                  //| 011913838982790626, -0.0118939812136993, -0.011872891524335277, -0.011850635
                                                  //| 631289935, -0.011827274512263498, -0.011802865055013337, -0.0117774605843935
                                                  //| 44, -0.011751111292164704, -0.01172386458918774, -0.011695765395593131, -0.0
                                                  //| 11666856381320811, -0.011637178166888737, -0.01160676949223155, -0.011575667
                                                  //| 359848649, -0.011543907157228597, -0.011511522762507078, -0.0114785466365093
                                                  //| 93, -0.011445009903693786, -0.011410942424001001, -0.011376372857214882, -0.
                                                  //| 011341328721116845, -0.011305836444462047, -0.011269921415602523, -0.0112336
                                                  //| 08027422012, -0.011196919719116922, -0.011159879015256793, -0.01112250756247
                                                  //| 6666, -0.011084826164086348, -0.011046854812832938, -0.011008612722008728, -
                                                  //| 0.01097011835506483, -0.010931389453863797, -0.010892443065684064, -0.010853
                                                  //| 29556906996, -0.01081396269860974, -0.010774459568710607, -0.010734800696431
                                                  //| 915, -0.010695000023430358))

  val priceGuess = estimator.estimate(RealtyListing(1416, 3, 2, 40, 0.0))
                                                  //> priceGuess  : Double = 288.60017635814035

  val errorPlot = Plot(lfs = List(("error" -> estimator.errTree)),
    connect = true,
    drawKey = true,
    title = Some("Linear Regression Error"),
    xAxis = 0.0,
    xAxisLabel = Some("step"),
    yAxis = 0,
    yAxisLabel = Some("error"))                   //> errorPlot  : axle.visualize.Plot[Int,Nothing,Double,Nothing] = Plot(List((e
                                                  //| rror,Map(0 -> 2.5128090091314887, 1 -> 1.9940009164767303, 2 -> 1.581918721
                                                  //| 92217, 3 -> 1.2545993429121414, 4 -> 0.9945998668072344, 5 -> 0.78806725080
                                                  //| 58177, 6 -> 0.623999488249853, 7 -> 0.493658835327345, 8 -> 0.3901058023906
                                                  //| 5656, 9 -> 0.30782905514262204, 10 -> 0.24245148633625785, 11 -> 0.19049678
                                                  //| 122062969, 12 -> 0.14920402642498015, 13 -> 0.11638047439014737, 14 -> 0.09
                                                  //| 028461049827027, 15 -> 0.06953328625861772, 16 -> 0.05302796548021301, 17 -
                                                  //| > 0.03989614976064845, 18 -> 0.02944485921520371, 19 -> 0.02112368734115886
                                                  //| 4, 20 -> 0.01449545955216976, 21 -> 0.009212930461954393, 22 -> 0.005000277
                                                  //| 075209034, 23 -> 0.0016384008348354767, 24 -> -0.0010467453790410433, 25 ->
                                                  //|  -0.003193427866263157, 26 -> -0.004911494776430103, 27 -> -0.0062882235070
                                                  //| 25643, 28 -> -0.007392964688493677, 29 -> -0.00828083043083155, 30 -> -0.00
                                                  //| 8995623532046786, 31 -> -0.009572163865680796, 32 -> -0.010038136013356486,
                                                  //|  33 -> -0.010415556674154173, 34 -> -0.010721940103692033, 35 -> -0.0109712
                                                  //| 23730491628, 36 -> -0.011174503306569508, 37 -> -0.011340616791014412, 38 -
                                                  //| > -0.011476608097798161, 39 -> -0.011588095431943217, 40 -> -0.011679563849
                                                  //| 700224, 41 -> -0.011754597637187596, 42 -> -0.011816064892466137, 43 -> -0.
                                                  //| 011866264147088038, 44 -> -0.011907040838828195, 45 -> -0.01193987983959875
                                                  //| 2, 46 -> -0.011965978965730442, 47 -> -0.011986307383761954, 48 -> -0.01200
                                                  //| 1652019544996, 49 -> -0.012012654438877293, 50 -> -0.012019840159920397, 51
                                                  //|  -> -0.012023641954244806, 52 -> -0.012024418372954836, 53 -> -0.0120224684
                                                  //| 79897571, 54 -> -0.0120180435718764, 55 -> -0.01201135650530015, 56 -> -0.0
                                                  //| 12002589121233993, 57 -> -0.011991898159591386, 58 -> -0.011979419972808075
                                                  //| , 59 -> -0.011965274285490591, 60 -> -0.011949567195819386, 61 -> -0.011932
                                                  //| 393574215536, 62 -> -0.011913838982790626, 63 -> -0.0118939812136993, 64 ->
                                                  //|  -0.011872891524335277, 65 -> -0.011850635631289935, 66 -> -0.0118272745122
                                                  //| 63498, 67 -> -0.011802865055013337, 68 -> -0.011777460584393544, 69 -> -0.0
                                                  //| 11751111292164704, 70 -> -0.01172386458918774, 71 -> -0.011695765395593131,
                                                  //|  72 -> -0.011666856381320811, 73 -> -0.011637178166888737, 74 -> -0.0116067
                                                  //| 6949223155, 75 -> -0.011575667359848649, 76 -> -0.011543907157228597, 77 ->
                                                  //|  -0.011511522762507078, 78 -> -0.011478546636509393, 79 -> -0.0114450099036
                                                  //| 93786, 80 -> -0.011410942424001001, 81 -> -0.011376372857214882, 82 -> -0.0
                                                  //| 11341328721116845, 83 -> -0.011305836444462047, 84 -> -0.011269921415602523
                                                  //| , 85 -> -0.011233608027422012, 86 -> -0.011196919719116922, 87 -> -0.011159
                                                  //| 879015256793, 88 -> -0.011122507562476666, 89 -> -0.011084826164086348, 90 
                                                  //| -> -0.011046854812832938, 91 -> -0.011008612722008728, 92 -> -0.01097011835
                                                  //| 506483, 93 -> -0.010931389453863797, 94 -> -0.010892443065684064, 95 -> -0.
                                                  //| 01085329556906996, 96 -> -0.01081396269860974, 97 -> -0.010774459568710607,
                                                  //|  98 -> -0.010734800696431915, 99 -> -0.010695000023430358))),true,true,700,
                                                  //| 600,50,4,Some(Linear Regression Error),0.0,Some(step),0,Some(error))
  
  // show(errorPlot)

}